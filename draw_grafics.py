import matplotlib.pyplot as plt
from scipy.interpolate import make_interp_spline
import numpy as np


def draw_10():
    accuracy1 = np.array(
        [210, 202, 194, 184, 174, 165, 159, 151, 144, 140, 136, 132, 129, 126, 124, 122, 121, 117, 115, 113, 109, 105,
         102, 97, 92, 87, 83, 79, 74, 72, 71, 68, 65, 63, 62, 62, 63, 63, 63, 63, 63, 61, 59, 57, 54, 51, 48, 47, 45,
         40, 39, 38, 36, 36, 35, 34, 33, 32, 31, 30, 29, 29, 28, 27, 24, 24, 21, 20, 19, 18])
    accuracy1_10penalty = np.array(
        [210, 203, 198, 188, 178, 168, 162, 156, 148, 140, 132, 125, 118, 111, 104, 98, 94, 86, 80, 74, 68, 62, 57, 54,
         51, 49, 45, 41, 39, 35, 32, 31, 29, 27, 27, 25, 23, 23, 23, 23, 23, 23, 23, 24, 23, 23, 23, 24, 23, 23, 23, 23,
         24, 23, 23, 23, 23, 23, 23, 22, 21, 21, 21, 21, 22, 23, 23, 23, 24, 23])
    accuracy2 = np.array(
        [210, 204, 198, 188, 178, 168, 158, 148, 138, 128, 118, 108, 98, 89, 81, 75, 73, 72, 72, 72, 72, 72, 72,
         72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
         72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72])
    accuracy3 = np.array(
        [210, 200, 190, 180, 170, 160, 150, 140, 130, 120, 110, 100, 90, 80, 70, 60, 50, 42, 35, 28, 28, 28, 28, 28, 28,
         28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
         28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28])
    accuracy3new = np.array(
        [210, 200, 190, 180, 170, 160, 150, 140, 130, 120, 110, 100, 90, 80, 70, 60, 50, 41, 32, 27, 25, 25,
         25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
         25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25])

    diameter1 = np.array(
        [18, 18, 17, 15, 14, 14, 14, 13, 11, 11, 11, 10, 10, 10, 10, 11, 12, 13, 13, 13, 13, 13, 14, 13, 13, 13, 14, 14,
         14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 14, 13, 12, 11, 10, 9, 8, 8, 8, 7, 6, 6, 6,
         6, 6, 7, 7, 7, 7, 7, 7, 6, 5, 5, 5])
    diameter1_10penalty = np.array(
        [18, 18, 17, 17, 17, 15, 15, 15, 15, 15, 14, 14, 14, 12, 11, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14, 15, 14, 13,
         12, 11, 10, 9, 8, 7, 6, 5, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
         6, 6, 6, 6, 6, 6])
    diameter2 = np.array(
        [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
         18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
         18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18])
    diameter3 = np.array(
        [18, 18, 17, 17, 17, 15, 15, 14, 14, 14, 12, 12, 12, 11, 11, 10, 9, 9, 9, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
         7])
    diameter3new = np.array(
        [18, 16, 14, 12, 10, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
         7, 7])

    figure = plt.figure(figsize=(10, 5))
    sub_plot = figure.add_subplot(1, 2, 1)

    plt.xlabel("Time steps")
    plt.ylabel("Diameter")
    plt.xlim(-2, 72)
    plt.ylim(-2, max(diameter1) + 10)
    # plt.title("Diameter for 10 agents on 24*24 plane")

    time_steps_smooth = np.linspace(0, 69, 200)
    spl = make_interp_spline([i for i in range(0, 70)], diameter1, k=5)
    diameter1_smooth = spl(time_steps_smooth)
    spl = make_interp_spline([i for i in range(0, 70)], diameter2, k=5)
    diameter2_smooth = spl(time_steps_smooth)
    spl = make_interp_spline([i for i in range(0, 70)], diameter3, k=5)
    diameter3_smooth = spl(time_steps_smooth)

    sub_plot.plot([i for i in range(0, 70)], diameter1, "r-", label="Micro-control")
    sub_plot.plot([i for i in range(0, 70)], diameter2, "g-", label="Macro-control")
    sub_plot.plot([i for i in range(0, 70)], diameter3, "b-", label="Meso-control")
    sub_plot.legend(loc="best")

    sub_plot = figure.add_subplot(1, 2, 2)
    plt.xlabel("Time steps")
    plt.ylabel("Accuracy")
    plt.xlim(-2, 72)
    plt.ylim(-2, max(accuracy1) + 5)
    # plt.title("Accuracy for 10 agents on 24*24 plane")

    time_steps_smooth = np.linspace(0, 69, 200)
    spl = make_interp_spline([i for i in range(0, 70)], accuracy1, k=5)
    accuracy1_smooth = spl(time_steps_smooth)
    spl = make_interp_spline([i for i in range(0, 70)], accuracy2, k=5)
    accuracy2_smooth = spl(time_steps_smooth)
    spl = make_interp_spline([i for i in range(0, 70)], accuracy3, k=5)
    accuracy3_smooth = spl(time_steps_smooth)

    sub_plot.plot([i for i in range(0, 70)], accuracy1, "r-", label="Micro-control")
    sub_plot.plot([i for i in range(0, 70)], accuracy2, "g-", label="Macro-control")
    sub_plot.plot([i for i in range(0, 70)], accuracy3, "b-", label="Meso-control")
    sub_plot.legend(loc="best")

    # plt.show()
    plt.savefig("./result/grade_for_10_agents.png", transparent=False, facecolor="white", dpi=170)


def draw_40():
    accuracy1 = [3188, 3156, 3132, 3104, 3080, 3049, 3021, 2993, 2962, 2931, 2900, 2868, 2838, 2807, 2776, 2746, 2714,
                 2683, 2653, 2618, 2585, 2549, 2511, 2477, 2442, 2405, 2371, 2337, 2304, 2268, 2232, 2197, 2159, 2121,
                 2085, 2048, 2014, 1980, 1948, 1918, 1887, 1853, 1821, 1790, 1756, 1720, 1682, 1646, 1610, 1575, 1543,
                 1508, 1473, 1435, 1397, 1359, 1322, 1286, 1248, 1209, 1171, 1132, 1095, 1058, 1022, 987, 953, 919, 885,
                 852, 819, 788, 760, 728, 698, 671, 642, 621, 601, 580, 557, 534, 513, 489, 468, 443, 423, 407, 392,
                 378, 362, 350, 337, 320, 307, 298, 285, 274, 263, 255, 247, 244, 244, 243, 236, 235, 238, 239, 242,
                 237, 233, 232, 225, 220, 222, 221, 221, 219, 219, 219, 222, 218, 214, 219, 220, 219, 218, 218, 219,
                 219]
    accuracy1_10penalty = [3188, 3152, 3119, 3093, 3064, 3037, 3013, 2993, 2972, 2952, 2932, 2912, 2890, 2865, 2838, 2815, 2790, 2765, 2739, 2711, 2681, 2651, 2620, 2588, 2556, 2528, 2494, 2460, 2426, 2392, 2358, 2324, 2291, 2257, 2222, 2186, 2150, 2113, 2076, 2043, 2010, 1980, 1949, 1917, 1886, 1852, 1818, 1785, 1750, 1715, 1679, 1643, 1605, 1567, 1530, 1495, 1464, 1435, 1406, 1378, 1355, 1333, 1306, 1279, 1252, 1226, 1199, 1166, 1132, 1099, 1066, 1033, 1000, 968, 936, 903, 873, 844, 815, 788, 758, 732, 708, 683, 658, 636, 619, 597, 575, 555, 536, 519, 501, 486, 470, 453, 437, 424, 412, 401, 390, 382, 374, 367, 362, 353, 345, 337, 327, 323, 315, 309, 304, 299, 297, 294, 293, 291, 290, 289, 287, 283, 277, 271, 267, 264, 259, 255, 251, 247]
    accuracy2 = [3188, 3167, 3127, 3087, 3047, 3007, 2967, 2927, 2887, 2847, 2807, 2767, 2727, 2687, 2647, 2607,
                 2567, 2527, 2487, 2447, 2407, 2367, 2327, 2287, 2247, 2207, 2167, 2127, 2087, 2047, 2007, 1967,
                 1927, 1887, 1847, 1807, 1767, 1727, 1687, 1647, 1607, 1567, 1527, 1487, 1447, 1407, 1367, 1327,
                 1287, 1247, 1207, 1167, 1127, 1087, 1047, 1007, 967, 928, 890, 854, 819, 788, 760, 734, 713,
                 694, 677, 661, 646, 633, 622, 614, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
                 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
                 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
                 609, 609, 609, 609, 609, 609]
    accuracy3 = [3189, 3149, 3109, 3069, 3029, 2989, 2949, 2909, 2869, 2829, 2789, 2749, 2709, 2669, 2629, 2589, 2549,
                 2509, 2469, 2429, 2389, 2349, 2309, 2269, 2229, 2189, 2149, 2109, 2069, 2029, 1989, 1949, 1909, 1869,
                 1829, 1789, 1749, 1709, 1669, 1629, 1589, 1549, 1518, 1478, 1438, 1398, 1358, 1318, 1278, 1238, 1198,
                 1158, 1118, 1078, 1038, 998, 958, 918, 878, 838, 798, 758, 718, 678, 638, 598, 558, 518, 478, 440, 405,
                 371, 341, 318, 297, 280, 264, 243, 234, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
                 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
                 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224]

    diameter1 = [52, 52, 51, 52, 51, 51, 52, 52, 52, 51, 51, 51, 50, 49, 48, 47, 47, 46, 46, 46, 45, 45, 45, 46, 46, 45,
                 45, 45, 44, 44, 44, 43, 42, 41, 41, 41, 41, 40, 40, 40, 40, 40, 40, 42, 43, 45, 45, 44, 44, 44, 43, 43,
                 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 42, 41, 40, 39, 38, 37, 36, 35,
                 34, 33, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 20, 19, 18, 18, 17, 16, 15, 16, 15, 14, 14, 14,
                 14, 14, 13, 13, 13, 13, 14, 12, 12, 12, 13, 12, 13, 12, 13, 12, 12, 12, 12, 13, 12, 13, 13, 12, 11, 12]
    diameter1_10penalty = [52, 52, 52, 51, 51, 51, 51, 51, 51, 50, 50, 50, 49, 49, 48, 48, 48, 48, 48, 47, 47, 47, 47,
                           47, 47, 48, 48, 46, 46, 46, 46, 46, 46, 46, 46, 47, 48, 49, 50, 50, 51, 52, 53, 53, 54, 54,
                           54, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 67, 67, 67,
                           67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45,
                           44, 43, 42, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 30, 29, 28, 28, 28, 28, 28, 28, 29,
                           28, 28, 28, 28, 29, 28, 27, 27, 26, 25, 24, 23, 22, 21, 20]
    diameter2 = [52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
                 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
                 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
                 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
                 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
                 52, 52, 52]
    diameter3 = [52, 52, 52, 52, 51, 50, 50, 50, 49, 49, 48, 48, 47, 47, 47, 46, 45, 45, 45, 45, 43, 43, 43, 43, 42, 41,
                 41, 41, 40, 40, 39, 39, 38, 38, 37, 37, 36, 36, 36, 35, 34, 34, 34, 34, 32, 32, 32, 32, 31, 31, 31, 30,
                 29, 29, 29, 29, 27, 27, 27, 27, 26, 25, 25, 25, 24, 24, 23, 23, 22, 22, 22, 21, 20, 20, 20, 20, 20, 19,
                 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
                 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19]

    figure = plt.figure(figsize=(10, 5))
    sub_plot = figure.add_subplot(1, 2, 1)

    plt.xlabel("Time steps")
    plt.ylabel("Diameter")
    plt.xlim(-4, 134)
    plt.ylim(-2, max(diameter1) + 20)
    # plt.title("Diameter for 40 agents on 100*100 plane")

    sub_plot.plot([i for i in range(0, 130)], diameter1_10penalty, "r-", label="Micro-control")
    sub_plot.plot([i for i in range(0, 130)], diameter2, "g-", label="Macro-control")
    sub_plot.plot([i for i in range(0, 130)], diameter3, "b-", label="Meso-control")
    sub_plot.legend(loc="best")

    sub_plot = figure.add_subplot(1, 2, 2)

    plt.xlabel("Time steps")
    plt.ylabel("Accuracy")
    plt.xlim(-4, 134)
    plt.ylim(-2, max(accuracy1) + 50)
    # plt.title("Accuracy for 40 agents on 100*100 plane")

    sub_plot.plot([i for i in range(0, 130)], accuracy1_10penalty, "r-", label="Micro-control")
    sub_plot.plot([i for i in range(0, 130)], accuracy2, "g-", label="Macro-control")
    sub_plot.plot([i for i in range(0, 130)], accuracy3, "b-", label="Meso-control")
    sub_plot.legend(loc="best")

    # plt.show()
    plt.savefig("./result/grade_for_40_agents.png", transparent=False, facecolor="white", dpi=250)


def draw_40_walls():
    accuracy_micro = [3082, 3051, 3019, 2986, 2955, 2924, 2897, 2874, 2852, 2834, 2810, 2784, 2755, 2727, 2702, 2669, 2641, 2615, 2582, 2555, 2524, 2499, 2470, 2439, 2410, 2378, 2355, 2329, 2305, 2273, 2238, 2204, 2174, 2140, 2106, 2070, 2037, 2003, 1968, 1931, 1897, 1860, 1822, 1782, 1743, 1704, 1664, 1625, 1585, 1545, 1505, 1465, 1425, 1385, 1346, 1307, 1270, 1234, 1194, 1156, 1118, 1080, 1040, 1000, 962, 925, 889, 853, 816, 779, 742, 706, 673, 641, 610, 583, 552, 523, 501, 481, 456, 432, 407, 383, 364, 345, 333, 318, 300, 289, 282, 268, 261, 251, 243, 236, 229, 223, 217, 217, 205, 191, 188, 186, 181, 176, 172, 167, 160, 160, 164, 161, 159, 155, 153, 151, 154, 153, 151, 150, 141, 141, 146, 143, 143, 146, 145, 139, 139, 143, 138, 137, 138, 134, 130, 132, 137, 139, 138, 139, 141, 148, 147, 143, 146, 142, 143, 135, 131, 126, 131, 130, 131, 129, 128, 135, 132, 129, 127, 125]
    accuracy_micro_10penalty = [3082, 3051, 3023, 2996, 2972, 2946, 2924, 2901, 2882, 2859, 2840, 2820, 2807, 2786, 2764, 2744, 2723, 2703, 2678, 2655, 2633, 2609, 2585, 2559, 2535, 2509, 2483, 2457, 2431, 2406, 2382, 2359, 2334, 2314, 2295, 2277, 2256, 2236, 2217, 2194, 2172, 2149, 2126, 2102, 2079, 2053, 2028, 2002, 1978, 1950, 1923, 1896, 1867, 1839, 1808, 1777, 1750, 1714, 1678, 1643, 1607, 1570, 1533, 1496, 1459, 1422, 1385, 1348, 1313, 1275, 1240, 1203, 1168, 1136, 1103, 1070, 1038, 1007, 977, 946, 916, 884, 852, 825, 797, 768, 742, 719, 695, 672, 650, 630, 612, 595, 577, 559, 543, 528, 512, 498, 483, 468, 455, 440, 426, 415, 404, 394, 383, 374, 365, 356, 346, 339, 332, 326, 321, 313, 307, 305, 300, 296, 293, 289, 285, 282, 279, 275, 269, 264, 262, 260, 260, 255, 250, 249, 246, 244, 241, 240, 237, 235, 234, 236, 234, 235, 232, 230, 228, 225, 221, 218, 216, 213, 212, 208, 207, 206, 205, 202]
    # accuracy_meso = [3082, 3050, 3021, 2989, 2950, 2912, 2873, 2838, 2803, 2772, 2741, 2716, 2693, 2673, 2649, 2627, 2599, 2568, 2535, 2507, 2475, 2444, 2407, 2373, 2337, 2300, 2265, 2225, 2187, 2150, 2110, 2070, 2030, 1990, 1950, 1910, 1870, 1830, 1790, 1750, 1710, 1670, 1630, 1590, 1550, 1510, 1470, 1430, 1390, 1350, 1310, 1270, 1230, 1190, 1150, 1110, 1070, 1030, 990, 950, 911, 872, 833, 793, 753, 713, 677, 642, 608, 572, 541, 510, 483, 460, 439, 421, 400, 380, 365, 352, 340, 328, 324, 311, 306, 297, 291, 282, 281, 278, 274, 273, 271, 271, 268, 265, 261, 259, 258, 258, 259, 258, 258, 259, 258, 258, 258, 257, 257, 258, 257, 257, 258, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 258, 257, 257, 257, 257, 258, 257, 257, 257, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256]
    accuracy_meso = [3082, 3050, 3019, 2985, 2950, 2915, 2883, 2853, 2821, 2788, 2757, 2725, 2704, 2683, 2657, 2633, 2607, 2584, 2554, 2524, 2494, 2468, 2429, 2395, 2360, 2324, 2285, 2247, 2208, 2172, 2132, 2093, 2053, 2013, 1973, 1933, 1893, 1853, 1813, 1773, 1733, 1693, 1653, 1613, 1573, 1533, 1493, 1453, 1413, 1373, 1333, 1293, 1253, 1213, 1173, 1133, 1093, 1053, 1013, 973, 934, 895, 856, 818, 778, 739, 701, 661, 623, 586, 547, 512, 479, 444, 416, 389, 368, 353, 339, 331, 328, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329]

    diameter_micro = [33, 33, 34, 34, 34, 33, 33, 33, 33, 32, 33, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 33, 35, 34, 34, 35, 36, 36, 36, 38, 39, 41, 42, 44, 44, 43, 42, 41, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 41, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 28, 27, 26, 24, 23, 23, 22, 21, 21, 19, 18, 18, 16, 15, 14, 13, 12, 12, 11, 12, 12, 13, 12, 11, 11, 12, 12, 10, 10, 11, 10, 11, 11, 11, 12, 11, 10, 11, 10, 11, 11, 11, 10, 10, 12, 10, 10, 10, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 11, 12, 12, 10, 11, 10, 10, 10, 9, 10, 10, 11, 10, 10, 11]
    diameter_micro_10penalty = [33, 33, 35, 35, 35, 35, 35, 35, 35, 35, 34, 34, 35, 35, 34, 35, 36, 36, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 37, 38, 38, 39, 40, 41, 42, 43, 44, 45, 46, 46, 46, 46, 45, 45, 45, 46, 47, 47, 48, 49, 50, 51, 52, 53, 55, 55, 56, 57, 59, 60, 61, 62, 63, 63, 64, 65, 66, 67, 68, 69, 68, 67, 67, 66, 66, 65, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 15, 14, 14, 14, 14, 13, 12, 12, 12, 12, 12, 12]
    # diameter_meso = [33, 33, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 34, 34, 33, 33, 33, 32, 32, 32, 32, 31, 30, 30, 29, 29, 29, 28, 27, 27, 28, 27, 27, 26, 25, 24, 23, 22, 22, 21, 20, 20, 19, 19, 19, 20, 20, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
    diameter_meso = [33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 36, 36, 35, 34, 34, 33, 32, 32, 31, 30, 30, 29, 28, 28, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27]

    figure = plt.figure(figsize=(10, 5))
    sub_plot = figure.add_subplot(1, 2, 1)

    plt.xlabel("Time steps")
    plt.ylabel("Diameter")
    plt.xlim(-4, 164)
    plt.ylim(-2, max(diameter_micro_10penalty) + 20)
    # plt.title("Diameter for 40 agents on 100*100 plane")

    sub_plot.plot([i for i in range(0, 160)], diameter_micro_10penalty, "r-", label="Micro-control")
    sub_plot.plot([i for i in range(0, 160)], diameter_meso, "b-", label="Meso-control")
    sub_plot.legend(loc="best")

    sub_plot = figure.add_subplot(1, 2, 2)

    plt.xlabel("Time steps")
    plt.ylabel("Precision")
    plt.xlim(-4, 164)
    plt.ylim(-2, max(accuracy_micro) + 50)
    # plt.title("Accuracy for 40 agents on 100*100 plane")

    sub_plot.plot([i for i in range(0, 160)], accuracy_micro_10penalty, "r-", label="Micro-control")
    sub_plot.plot([i for i in range(0, 160)], accuracy_meso, "b-", label="Meso-control")
    sub_plot.legend(loc="best")

    # plt.show()
    plt.savefig("./result/grade_for_40_agents_walls.png", transparent=False, facecolor="white", dpi=250)


if __name__ == "__main__":
    # draw_10()
    # draw_40()
    draw_40_walls()
